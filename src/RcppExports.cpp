// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// get_V_full
arma::mat get_V_full(int k, arma::mat V_LD, double varSNPSE2, arma::mat SE_SNP, arma::mat I_LD, arma::vec varSNP, std::string GC, arma::mat coords, int i);
RcppExport SEXP _GenomicSEM_get_V_full(SEXP kSEXP, SEXP V_LDSEXP, SEXP varSNPSE2SEXP, SEXP SE_SNPSEXP, SEXP I_LDSEXP, SEXP varSNPSEXP, SEXP GCSEXP, SEXP coordsSEXP, SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type V_LD(V_LDSEXP);
    Rcpp::traits::input_parameter< double >::type varSNPSE2(varSNPSE2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SE_SNP(SE_SNPSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type I_LD(I_LDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type varSNP(varSNPSEXP);
    Rcpp::traits::input_parameter< std::string >::type GC(GCSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    rcpp_result_gen = Rcpp::wrap(get_V_full(k, V_LD, varSNPSE2, SE_SNP, I_LD, varSNP, GC, coords, i));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GenomicSEM_get_V_full", (DL_FUNC) &_GenomicSEM_get_V_full, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_GenomicSEM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
